import sqlite3
from pathlib import Path
import random
import time
import telebot
from telebot import types
from api_sd import img2img
from delete_users_file import delete_file
from sql import minus_token, minus_gift_token, plus_token

bot = telebot.TeleBot('');

@bot.message_handler(commands=['start'])
def start(message):
    mes = message.chat.id
    img2 = open(f'static/img/13.png', 'rb')
    token = 3
    gift_token = 3
    id_user = message.chat.id
    name_users = message.from_user.username
    con = sqlite3.connect('db.db')
    cur = con.cursor()

    cur.execute('CREATE TABLE IF NOT EXISTS users (id int primary key, name varchar(50), token int, gift_token int)')
    con.commit()
    cur.execute("INSERT OR IGNORE INTO users (id, name, token, gift_token) VALUES ('%s','%s', '%s','%s')" % (id_user, name_users, token, gift_token))
    con.commit()
    cur.execute(f"SELECT gift_token FROM users WHERE id = {mes}")
    token_cortege = str(cur.fetchone())
    gift_token = int("".join(c for c in token_cortege if c.isalnum()))
    cur.close()
    con.close()

    #–°–æ–∑–¥–∞–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ –º–µ–Ω—é
    markup = types.InlineKeyboardMarkup()
    item1 = types.InlineKeyboardButton('‚ù§Ô∏è‚Äçüî• –û–±—Ä–∞–±–æ—Ç–∞—Ç—å —Ñ–æ—Ç–æ', callback_data='undress', row_width=1)
    item2 = types.InlineKeyboardButton('üí∞ –ü–æ–ø–æ–ª–Ω–∏—Ç—å', callback_data='money', row_width=2)
    item3 = types.InlineKeyboardButton('üìù –ü–æ–ª–∏—Ç–∏–∫–∞ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏', callback_data='police', row_width=2)
    item4 = types.InlineKeyboardButton('‚úâ –ü–æ–¥–¥–µ—Ä–∂–∫–∞', callback_data='support', row_width=2)
    item5 = types.InlineKeyboardButton('üë® –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç', callback_data='LK', row_width=2)
    markup.add(item1, item2, item3, item4, item5)
    bot.send_photo(message.chat.id, img2, caption=f'–ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}. –Ø - –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π —Å–ø–æ—Å–æ–±–µ–Ω –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å —Ñ–æ—Ç–æ –ø–æ –≤–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É.'
                                                  '\n'
                                                  f'\nüéÅ –£ —Ç–µ–±—è –µ—Å—Ç—å {gift_token} –ø–æ–¥–∞—Ä–æ—á–Ω—ã—Ö –º–æ–Ω–µ—Ç–∫–∏! üéÅ'
                                                  '\n'
                                                  f'\nüç• 1 –º–æ–Ω–µ—Ç–∫–∞ = 1 –æ–±—Ä–∞–±–æ—Ç–∫–∞. –î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –ø–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å, –∑–∞–π–¥–∏ –≤ —Ä–∞–∑–¥–µ–ª –º–µ–Ω—é "–ü–æ–ø–æ–ª–Ω–∏—Ç—å" üç•', reply_markup=markup)

@bot.callback_query_handler(func=lambda callback: True)
def callback_message(callback):
    mes = callback.message.chat.id
    con = sqlite3.connect('db.db')
    cur = con.cursor()
    cur.execute(f"SELECT token FROM users WHERE id = {mes}")
    token_cortege = str(cur.fetchone())
    token = int("".join(c for c in token_cortege if c.isalnum()))
    cur.close()
    con.close()

    img1 = open(f'static/img/14.png', 'rb')
    if callback.data == 'undress':
        bot.send_photo(callback.message.chat.id, img1, caption="–î–ª—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –ø—Ä–∏–¥–µ—Ä–∂–∏–≤–∞–π—Å—è –ø—Ä–∞–≤–∏–ª:\n\nüêü–ù–∞ —Ñ–æ—Ç–æ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ–¥–∏–Ω —á–µ–ª–æ–≤–µ–∫\n\n–ñ–¥—É —Ñ–æ—Ç–æüòâ")
    elif callback.data == 'support':
        bot.send_message(callback.message.chat.id,"–ï—Å–ª–∏ —É –≤–∞—Å –æ—Å—Ç–∞–ª–∏—Å—å –≤–æ–ø—Ä–æ—Å—ã –∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ, —Ç–æ –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å –ø–æ —ç—Ç–æ–π —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–π –ø–æ—á—Ç–µ\n–ï—Å–ª–∏ —É –≤–∞—Å –≤–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞, –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å –ø–æ —ç—Ç–æ —ç–ª. –ø–æ—á—Ç–µ")
    elif callback.data == 'LK':
        bot.send_message(callback.message.chat.id, f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: @{callback.message.chat.username}\nID: {mes}\n\n–î–æ—Å—Ç—É–ø–Ω–æ –º–æ–Ω–µ—Ç: {token}")

@bot.message_handler(content_types=['photo'])
def save_photo(message):
    # —Å–æ—Ö—Ä–∞–Ω–∏–º id —á–∞—Ç–∞ –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é
    mes = message.chat.id

    # —Å–æ–∑–¥–∞–¥–∏–º –ø–∞–ø–∫—É –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
    Path(f'files/{mes}/photos').mkdir(parents=True, exist_ok=True)

    #–ø–æ–¥–∫–ª—é—á–∞–µ–º –±–¥ –∏ –≤—ã—Ç–∞—Å–∫–∏–≤–∞–µ–º —Ç–æ–∫–µ–Ω—ã
    con = sqlite3.connect('db.db')
    cur = con.cursor()
    cur.execute(f"SELECT token FROM users WHERE id = {mes}")
    token_cortege = str(cur.fetchone())
    token = int("".join(c for c in token_cortege if c.isalnum())) #–∑–Ω–∞—á–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞
    cur.close()
    con.close()

    if not message.media_group_id:
        if token > 0:
            # –£–±–∏—Ä–∞–µ–º –æ–¥–∏–Ω —Ç–æ–∫–µ–Ω –∑–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É
            minus_token(mes)
            # —É–±–∏—Ä–∞–µ–º –æ–¥–∏–Ω –ø–æ–¥–∞—Ä–æ—á–Ω—ã–π —Ç–æ–∫–µ–Ω –∑–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É
            minus_gift_token(mes)

            bot.send_message(message.chat.id, "‚è≥–û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ—à–ª–∞...")

            time.sleep(3)

            bot.send_message(message.chat.id, f"–í—ã {random.randint(15,63)} –≤ –æ—á–µ—Ä–µ–¥–∏!")

            # —Å–æ—Ö—Ä–∞–Ω–∏–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
            file_info = bot.get_file(message.photo[len(message.photo) - 1].file_id)
            downloaded_file = bot.download_file(file_info.file_path)
            src = f'files/{mes}/' + file_info.file_path
            with open(src, 'wb') as new_file:
                new_file.write(downloaded_file)

            try:
                img2img(mes, src)
                photo = open(f'files/{mes}/photos/photos_1.jpg', 'rb')
                bot.send_photo(message.chat.id, photo)
                photo.close()
            except :
                bot.send_message(message.chat.id, '–ò–∑–≤–∏–Ω–∏—Ç–µ, –ø—Ä–æ–∏–∑–æ—à–ª–∞ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –Ω–µ–ø–æ–ª–∞–¥–∫–∞\n–° –≤–∞—à–µ–≥–æ —Å—á–µ—Ç–∞ –Ω–µ —Å–ø–∏—à–µ—Ç—Å—è –º–æ–Ω–µ—Ç–∫–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–¥–Ω–µ–µ!')
                plus_token(mes)
            # –£–¥–∞–ª–∏–º –Ω–µ–Ω–µ–∂—É–Ω—ã–µ —Ñ–∞–π–ª—ã
            delete_file(mes, src)

        else:
            bot.send_message(message.chat.id, "‚ùóÔ∏è‚ùóÔ∏è‚ùóÔ∏è–£ –≤–∞—Å –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å –º–æ–Ω–µ—Ç–∫–∏! –ß—Ç–æ–±—ã –ø–æ–ø–æ–ª–Ω–∏—Ç—å, –∑–∞–π–¥–∏—Ç–µ –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π —Ä–∞–∑–¥–µ–ª –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é")
    else:
        bot.send_message(message.chat.id, "–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–æ–ª—å–∫–æ –æ–¥–Ω–æ —Ñ–æ—Ç–æ –∑–∞ —Ä–∞–∑!")


@bot.message_handler(commands=['photo'])
def ass_ass(message):
    photo = open(f'files/{message.chat.id}/photos/file_113.jpg', 'rb')
    bot.send_photo(message.chat.id, photo)
    photo.close()
    photo = open(f'files/{message.chat.id}/photos/photos_1.jpg', 'rb')
    bot.send_photo(message.chat.id, photo)
    photo.close()

bot.polling(none_stop=True)
